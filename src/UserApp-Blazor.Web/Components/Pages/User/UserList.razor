@page "/users"

@using UserApp_Blazor.Domain.Entities
@using UserApp_Blazor.Web.Service.Services
@inject NavigationManager navigationManager
@inject IUserService userService;
@rendermode InteractiveServer


<h3>Users</h3>

<!-- Foydalanuvchilar ro'yxati -->
<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Email</th>
                <th>About</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (users != null && users.Any())
            {
                @foreach (var user in users)
                {
                    <tr>
                        <td>@user.Id</td>
                        <td>@user.Name</td>
                        <td>@user.Email</td>
                        <td>@user.About</td>
                        <td>
                            <button class="btn btn-primary">Edit</button>
                            <button class="btn btn-danger" type="button" @onclick="() => DeleteUser(user.Id)">Delete</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">No users found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private IEnumerable<User> users = Enumerable.Empty<User>();

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        users = (await userService.GetAllAsync());
    }


    private void EditUser(int userId)
    {
        //NavigationManager.NavigateTo($"/edit-user/{userId}");
    }

    private async Task DeleteUser(long userId)
    {
        try
        {
            await userService.DeleteAsync(userId);
            // navigationManager.NavigateTo("/users", true);
            // await OnUserDeleted.InvokeAsync(userId);
            await LoadUsers();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Xatolik yuz berdi: {ex.Message}");
        }
    }
}